/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package arm;

import java.util.List;
import java.util.ArrayList;
/**
 *
 * @author rahul
 */
public class waitForCreate extends javax.swing.JFrame {

	/**
	 * Creates new form waitForCreate
	 */
	public waitForCreate(addTimetable prev) {
		classname=prev.namelist.menu.classname;
		username=prev.namelist.menu.username;
		password=prev.namelist.menu.password;
		idno=prev.namelist.idno;
		name=prev.namelist.name;
		day=prev.day;
		starttime=prev.starttime;
		endtime=prev.endtime;
		sessionname=prev.sessionname;
		prev.namelist.menu.dispose();
		prev.namelist.dispose();
		prev.dispose();
		created=0;
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        title = new javax.swing.JLabel();
        progressbar = new javax.swing.JProgressBar();
        notifier = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        title.setFont(new java.awt.Font("Cantarell", 0, 36)); // NOI18N
        title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title.setText("Please wait");
        
        notifier.setText("Click here to continue");
        notifier.setBorderPainted(false);
        notifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                keyActionPerformed();
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(title, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(progressbar, javax.swing.GroupLayout.DEFAULT_SIZE, 296, Short.MAX_VALUE)
                    .addComponent(notifier, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(notifier, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(progressbar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

	private void keyActionPerformed()
	{
		if(created==0)
			update();
		
		else if(created==1)
		{
			setVisible(false);
        	dispose();
        	adminMenuUI.main(null);
		}
	}

	/**
	 * @param args the command line arguments
	 */
	public static void main(addTimetable prev) {
		/* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
		 * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try {
			javax.swing.UIManager.setLookAndFeel("com.sun.java.swing.plaf.gtk.GTKLookAndFeel");
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(waitForCreate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(waitForCreate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(waitForCreate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(waitForCreate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
        //</editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new waitForCreate(prev).setVisible(true);
			}
		});
	}
	
	private void update()
	{
		created=-1;
		String[] sno=util.SQLQuery("ARM_config","SELECT SNo FROM classes");
        int i=0;
		int namelength=idno.size();
		int sessionlength=sessionname.size();
		int[] dayno=new int[]{1,1,1,1,1,1,1};
		boolean b=false;
		
		do
		{
			i++;
			b=false;
			
			for(int j=0;j<sno.length;j++)
				if(Integer.toString(i).equals(sno[j]))
				{
					b=true;
					break;
				}
			
			if(!b)
			{
				progressbar.setValue(0);
				notifier.setText("Allocating space for class");
				util.SQLUpdate("ARM_config","INSERT INTO classes VALUES("+i+",'"+classname+"')");
				progressbar.setValue(50);
				util.SQLUpdate("CREATE DATABASE "+util.getClass(classname));
				util.SQLUpdate(classname,"CREATE TABLE Namelist(IDNo varchar("+util.getServerData("IDSize")+") PRIMARY KEY,Name text,Contact text,Password text)");
				util.SQLUpdate(classname,"CREATE TABLE Timetable(Day varchar(9),Session int,TimeStart text,TimeEnd text,SessionName text,PRIMARY KEY(Day,Session))");
				util.SQLUpdate(classname,"CREATE TABLE Percentage(IDNo varchar("+util.getServerData("IDSize")+"),SessionName varchar("+util.getServerData("SessionNameSize")+"),Attended int DEFAULT 0,Total int DEFAULT 0,PRIMARY KEY(IDNo,SessionName))");
				progressbar.setValue(100);
				
				progressbar.setValue(0);
				notifier.setText("Saving class login credentials");
				util.SQLUpdate("ARM_config","INSERT INTO staff VALUES('"+username+"','"+classname+"','"+password+"')");
				progressbar.setValue(100);
			}
		}while(b);
		
		progressbar.setValue(0);
		notifier.setText("Creating Namelist");
		
		for(i=0;i<namelength;i++)
		{
			util.updateIDSize(classname,idno.get(i));
			util.SQLUpdate(classname,"INSERT INTO Namelist(IDNo,Name) VALUES('"+idno.get(i)+"','"+name.get(i)+"')");
			util.SQLUpdate("ARM_config","INSERT INTO students VALUES('"+idno.get(i)+"','"+classname+"')");
			float f=((float) (i+1)/(float) namelength)*100;
			progressbar.setValue((int) f);
		}
		
		progressbar.setValue(0);
		notifier.setText("Creating Timetable");
		
		for(i=0;i<sessionlength;i++)
		{
            util.updateWorkingHours("StartTime",starttime.get(i));
			util.updateWorkingHours("EndTime",endtime.get(i));
            util.updatePercentage(classname,sessionname.get(i));
            util.SQLUpdate(classname,"INSERT INTO Timetable VALUES('"+day.get(i)+"',"+dayno[util.dayNumber(day.get(i))]+",'"+starttime.get(i)+"','"+endtime.get(i)+"','"+sessionname.get(i)+"')");
            dayno[util.dayNumber(day.get(i))]++;
            float f=((float) (i+1)/(float) sessionlength)*100;
    		progressbar.setValue((int) f);
		}
		notifier.setText("Class created. Click to continue");
		created=1;
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton notifier;
    private javax.swing.JProgressBar progressbar;
    private javax.swing.JLabel title;
    private String classname;
    private String username;
    private String password;
    private List<String> idno;
    private List<String> name;
    private List<String> day;
    private List<String> starttime;
    private List<String> endtime;
    private List<String> sessionname;
    private int created;
    // End of variables declaration//GEN-END:variables
}
