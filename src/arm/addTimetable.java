/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package arm;

import java.util.List;
import java.util.ArrayList;
/**
 *
 * @author rahul
 */
public class addTimetable extends javax.swing.JFrame {

    /**
     * Creates new form addTimetable
     */
    public addTimetable(addNamelist prev) {
	namelist=prev;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backbutton = new javax.swing.JButton();
        title = new javax.swing.JLabel();
        daychooser = new javax.swing.JComboBox<>();
        sessionnameinput = new javax.swing.JTextField();
        starthourchooser = new javax.swing.JComboBox<>();
        startminutechooser = new javax.swing.JComboBox<>();
        endhourchooser = new javax.swing.JComboBox<>();
        endminutechooser = new javax.swing.JComboBox<>();
        daylabel = new javax.swing.JLabel();
        sessionnamelabel = new javax.swing.JLabel();
        starttimelabel = new javax.swing.JLabel();
        endtimelabel = new javax.swing.JLabel();
        tolabel = new javax.swing.JLabel();
        startseparatorlabel = new javax.swing.JLabel();
        endseparatorlabel = new javax.swing.JLabel();
        addbutton = new javax.swing.JButton();
        deletebutton = new javax.swing.JButton();
        notifier = new javax.swing.JLabel();
        tablescroll = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        createbutton = new javax.swing.JButton();
        progressbar = new javax.swing.JProgressBar();
	tablemodel = new javax.swing.table.DefaultTableModel(new String[]{"Day","Timings","Subject"},0);
        day = new ArrayList<String>();
        starttime = new ArrayList<String>();
        endtime = new ArrayList<String>();
        sessionname = new ArrayList<String>();

	classname=namelist.menu.classname;
        username=namelist.menu.username;
        password=namelist.menu.password;
        idno=namelist.idno;
        name=namelist.name;

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        backbutton.setFont(new java.awt.Font("Cantarell", 1, 18)); // NOI18N
        backbutton.setText("<");
        backbutton.setPreferredSize(new java.awt.Dimension(50, 50));
        backbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backbuttonActionPerformed(evt);
            }
        });

        title.setFont(new java.awt.Font("Cantarell", 0, 36)); // NOI18N
        title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title.setText("Add Timetable");

        daychooser.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Moday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday" }));

        starthourchooser.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23" }));

        startminutechooser.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59" }));

        endhourchooser.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23" }));

        endminutechooser.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59" }));

        daylabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        daylabel.setText("Day");
        daylabel.setPreferredSize(new java.awt.Dimension(30, 24));

        sessionnamelabel.setText("Session Name");

        starttimelabel.setText("Start Time");

        endtimelabel.setText("End Time");

        tolabel.setFont(new java.awt.Font("Cantarell", 0, 24)); // NOI18N
        tolabel.setText("to");

        startseparatorlabel.setFont(new java.awt.Font("Cantarell", 1, 24)); // NOI18N
        startseparatorlabel.setText(":");

        endseparatorlabel.setFont(new java.awt.Font("Cantarell", 1, 24)); // NOI18N
        endseparatorlabel.setText(":");

        addbutton.setFont(new java.awt.Font("Cantarell", 1, 18)); // NOI18N
        addbutton.setText("+");
        addbutton.setPreferredSize(new java.awt.Dimension(29, 29));
	addbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addbuttonActionPerformed(evt);
            }
        });

        deletebutton.setFont(new java.awt.Font("Cantarell", 1, 18)); // NOI18N
        deletebutton.setText("-");
	deletebutton.setPreferredSize(new java.awt.Dimension(29, 29));
	deletebutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletebuttonActionPerformed(evt);
            }
        });

	notifier.setForeground(new java.awt.Color(255, 0, 0));

	table.setModel(tablemodel);
        table.getTableHeader().setReorderingAllowed(false);
        tablescroll.setViewportView(table);
        if (table.getColumnModel().getColumnCount() > 0) {
            table.getColumnModel().getColumn(0).setResizable(false);
            table.getColumnModel().getColumn(1).setResizable(false);
            table.getColumnModel().getColumn(2).setResizable(false);
        }

        createbutton.setText("Create Class");
        createbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createbuttonActionPerformed(evt);
            }
        });

	progressbar.setVisible(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(358, 358, 358)
                .addComponent(createbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(progressbar, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(82, 82, 82))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(backbutton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(title, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(tablescroll))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(notifier, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(daychooser, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(sessionnameinput, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(starthourchooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(startseparatorlabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(startminutechooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tolabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(endhourchooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(endseparatorlabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(endminutechooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(addbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deletebutton, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(daylabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(176, 176, 176)
                        .addComponent(sessionnamelabel)
                        .addGap(176, 176, 176)
                        .addComponent(starttimelabel)
                        .addGap(121, 121, 121)
                        .addComponent(endtimelabel)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(title, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(backbutton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(daylabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sessionnamelabel)
                    .addComponent(starttimelabel)
                    .addComponent(endtimelabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(daychooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sessionnameinput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(startminutechooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(startseparatorlabel)
                    .addComponent(endhourchooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tolabel)
                    .addComponent(starthourchooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(endminutechooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(endseparatorlabel)
                    .addComponent(addbutton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deletebutton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(notifier, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(tablescroll, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(createbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(399, 399, 399)
                        .addComponent(progressbar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40))))
        );

        pack();
	setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

	private void backbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backbuttonActionPerformed
        setVisible(false);
        dispose();
        namelist.setVisible(true);
    }//GEN-LAST:event_backbuttonActionPerformed

    private void addbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addbuttonActionPerformed
        String dayip=daychooser.getSelectedItem().toString();
        String nameip=sessionnameinput.getText();
        String startip=starthourchooser.getSelectedItem().toString()+":"+startminutechooser.getSelectedItem().toString();
        String endip=endhourchooser.getSelectedItem().toString()+":"+endminutechooser.getSelectedItem().toString();
        boolean dayused=false,timeused=false;

        if(sessionname.isEmpty())
        {
                day.add(dayip);
                sessionname.add(nameip);
                starttime.add(startip);
                endtime.add(endip);
                String[] row=new String[]{dayip,startip+" - "+endip,nameip};
                        tablemodel.addRow(row);
                        table.setModel(tablemodel);
        }        
	
	else if(startip.compareTo(endip)>0)
                notifier.setText("End time cannot be before Start time");

        else
        {
                for(int i=0;i<sessionname.size();i++)
                {
                        if(dayip.equals(day.get(i)))
                        {
                                dayused=true;

                                if(startip.equals(starttime.get(i))||startip.equals(endtime.get(i)))
                                {
                                        timeused=true;
                                        break;
                                }

                                if(endip.equals(starttime.get(i))||endip.equals(endtime.get(i)))
                                {
                                        timeused=true;
                                        break;
                                }

                                if(startip.compareTo(starttime.get(i))<0)
                                        if(endip.compareTo(endtime.get(i))>0)
                                        {
                                                timeused=true;
                                                break;
                                        }

                                if(startip.compareTo(starttime.get(i))>0)
                                        if(endip.compareTo(endtime.get(i))<0)
                                        {
                                                timeused=true;
                                                break;
                                        }

                                if(startip.compareTo(starttime.get(i))>0)
                                        if(startip.compareTo(endtime.get(i))<0)
                                        {
                                                timeused=true;
                                                break;
                                        }
			}
                }

                if((!dayused)||(!timeused))
                {
                        day.add(dayip);
                        sessionname.add(nameip);
                        starttime.add(startip);
                        endtime.add(endip);
                        String[] row=new String[]{dayip,startip+" - "+endip,nameip};
                                tablemodel.addRow(row);
                                table.setModel(tablemodel);
                }

                else
                        notifier.setText("Session timings clash with previously entered session");
        }

        sessionnameinput.setText("");
    }//GEN-LAST:event_addbuttonActionPerformed

    private void deletebuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletebuttonActionPerformed
        if(!sessionname.isEmpty())
        {
                day.remove(day.size()-1);
                sessionname.remove(sessionname.size()-1);
                starttime.remove(starttime.size()-1);
                endtime.remove(endtime.size()-1);
                tablemodel.removeRow(sessionname.size());
                table.setModel(tablemodel);
        }
    }//GEN-LAST:event_deletebuttonActionPerformed

        private void createbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createbuttonActionPerformed
	namelist.menu.dispose();
        namelist.dispose();
	notifier.setForeground(new java.awt.Color(0, 0, 255));
	notifier.setText("Please wait while we create the class");
	addbutton.setEnabled(false);
	backbutton.setEnabled(false);
	createbutton.setEnabled(false);
	deletebutton.setEnabled(false);
	daychooser.setEnabled(false);
	endhourchooser.setEnabled(false);
	endminutechooser.setEnabled(false);
	sessionnameinput.setEnabled(false);
	starthourchooser.setEnabled(false);
	startminutechooser.setEnabled(false);
	progressbar.setVisible(true);

	update();
	setVisible(false);
        dispose();
    }//GEN-LAST:event_createbuttonActionPerformed

        /**
         * @param args the command line arguments
         */
        public static void main(addNamelist prev) {
                /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
                 * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
                 */
                try {
                        util.setLookAndFeel();
                } catch (ClassNotFoundException ex) {
                        java.util.logging.Logger.getLogger(addTimetable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                } catch (InstantiationException ex) {
                        java.util.logging.Logger.getLogger(addTimetable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                } catch (IllegalAccessException ex) {
                        java.util.logging.Logger.getLogger(addTimetable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                } catch (javax.swing.UnsupportedLookAndFeelException ex) {
                        java.util.logging.Logger.getLogger(addTimetable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                }
        //</editor-fold>

                /* Create and display the form */
                java.awt.EventQueue.invokeLater(new Runnable() {
                        public void run() {
                                new addTimetable(prev).setVisible(true);
                        }
                });
        }

	private void update() {
                String[] sno=util.SQLQuery("ARM_config","SELECT SNo FROM classes");
                int i=0;
                int namelength=idno.size();
                int sessionlength=sessionname.size();
                int[] dayno=new int[]{1,1,1,1,1,1,1};
                boolean b=false;

                do {
                        i++;
                        b=false;

                        for(int j=0;j<sno.length;j++)
                                if(Integer.toString(i).equals(sno[j])) {
                                        b=true;
                                        break;
                                }

                        if(!b) {
                                progressbar.setValue(0);
                                util.SQLUpdate("ARM_config","INSERT INTO classes VALUES("+i+",'"+classname+"')");
                                progressbar.setValue(50);
                                util.SQLUpdate("CREATE DATABASE "+util.getClass(classname));
                                util.SQLUpdate(classname,"CREATE TABLE Namelist(IDNo varchar("+util.getServerData("IDSize")+") PRIMARY KEY,Name text,Contact text,Password text)");
                                util.SQLUpdate(classname,"CREATE TABLE Timetable(Day varchar(9),Session int,TimeStart text,TimeEnd text,SessionName text,PRIMARY KEY(Day,Session))");
                                util.SQLUpdate(classname,"CREATE TABLE Percentage(IDNo varchar("+util.getServerData("IDSize")+"),SessionName varchar("+util.getServerData("SessionNameSize")+"),Attended int DEFAULT 0,Total int DEFAULT 0,PRIMARY KEY(IDNo,SessionName))");
                                progressbar.setValue(100);

                                progressbar.setValue(0);
                                util.SQLUpdate("ARM_config","INSERT INTO staff VALUES('"+username+"','"+classname+"','"+password+"')");
                                progressbar.setValue(100);
                        }
                }while(b);

                progressbar.setValue(0);

                for(i=0;i<namelength;i++)
                {
                        util.updateIDSize(classname,idno.get(i));
                        util.SQLUpdate(classname,"INSERT INTO Namelist(IDNo,Name) VALUES('"+idno.get(i)+"','"+name.get(i)+"')");
                        util.SQLUpdate("ARM_config","INSERT INTO students VALUES('"+idno.get(i)+"','"+classname+"')");
                        float f=((float) (i+1)/(float) namelength)*100;
                        progressbar.setValue((int) f);
                }

                progressbar.setValue(0);

                for(i=0;i<sessionlength;i++)
                {
            util.updateWorkingHours("StartTime",starttime.get(i));
                        util.updateWorkingHours("EndTime",endtime.get(i));
            util.updatePercentage(classname,sessionname.get(i));
            util.SQLUpdate(classname,"INSERT INTO Timetable VALUES('"+day.get(i)+"',"+dayno[util.dayNumber(day.get(i))]+",'"+starttime.get(i)+"','"+endtime.get(i)+"','"+sessionname.get(i)+"')");
            dayno[util.dayNumber(day.get(i))]++;
            float f=((float) (i+1)/(float) sessionlength)*100;
                progressbar.setValue((int) f);
                }
        }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addbutton;
    private javax.swing.JButton backbutton;
    private javax.swing.JButton createbutton;
    private javax.swing.JComboBox daychooser;
    private javax.swing.JLabel daylabel;
    private javax.swing.JButton deletebutton;
    private javax.swing.JComboBox endhourchooser;
    private javax.swing.JComboBox endminutechooser;
    private javax.swing.JLabel endseparatorlabel;
    private javax.swing.JLabel endtimelabel;
    private javax.swing.JLabel notifier;
    private javax.swing.JTextField sessionnameinput;
    private javax.swing.JLabel sessionnamelabel;
    private javax.swing.JComboBox starthourchooser;
    private javax.swing.JComboBox startminutechooser;
    private javax.swing.JLabel startseparatorlabel;
    private javax.swing.JLabel starttimelabel;
    private javax.swing.JTable table;
    private javax.swing.JScrollPane tablescroll;
    private javax.swing.table.DefaultTableModel tablemodel;
    private javax.swing.JLabel title;
    private javax.swing.JLabel tolabel;
    private javax.swing.JProgressBar progressbar;
    private String classname;
    private String username;
    private String password;
    private List<String> idno;
    private List<String> name;
    private List<String> day;
    private List<String> starttime;
    private List<String> endtime;
    private List<String> sessionname;
    private addNamelist namelist;
    // End of variables declaration//GEN-END:variables
}
